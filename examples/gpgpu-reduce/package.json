{
	"name": "@example/gpgpu-reduce",
	"version": "0.0.1",
	"private": true,
	"description": "GPU-based data reduction using thi.ng/shader-ast & WebGL multi-pass pipeline",
	"repository": "https://github.com/thi-ng/umbrella",
	"author": "Karsten Schmidt <k+npm@thi.ng>",
	"license": "Apache-2.0",
	"scripts": {
		"start": "yarn css:build && yarn start:only",
		"start:only": "vite --host --open",
		"dev": "mprocs 'yarn css:watch' 'yarn start:only'",
		"css:watch": "../../node_modules/.bin/metacss develop --bundle --watch --pretty --out-specs css/framework.json --out-css css/style.css --force @css/includes.txt ../../packages/meta-css/specs/*.mcss.json css/*.mcss.json css/*.mcss",
		"css:build": "../../node_modules/.bin/metacss develop --bundle --out-specs css/framework.json --out-css css/style.css --force @css/includes.txt ../../packages/meta-css/specs/*.mcss.json css/*.mcss.json css/*.mcss",
		"build": "yarn css:build && tsc && vite build --base='./'",
		"preview": "vite preview --host --open"
	},
	"devDependencies": {
		"@thi.ng/meta-css": "workspace:^",
		"typescript": "^5.9.2",
		"vite": "^7.0.6"
	},
	"dependencies": {
		"@thi.ng/api": "workspace:^",
		"@thi.ng/bench": "workspace:^",
		"@thi.ng/binary": "workspace:^",
		"@thi.ng/errors": "workspace:^",
		"@thi.ng/shader-ast": "workspace:^",
		"@thi.ng/transducers": "workspace:^",
		"@thi.ng/webgl": "workspace:^"
	},
	"browser": {
		"process": false
	},
	"thi.ng": {
		"readme": [
			"bench",
			"errors",
			"shader-ast",
			"transducers",
			"webgl"
		]
	},
	"keywords": [
		"browser",
		"dsl",
		"example",
		"gpgpu",
		"multipass",
		"pipeline",
		"shader",
		"shader-ast",
		"transducer",
		"webgl"
	]
}
